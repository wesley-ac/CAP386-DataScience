from osgeo import gdal,osr
import numpy as np
import matplotlib.pyplot as plt


#raster = gdal.Open("D:/TESTE/ACRE_2009.tif")
raster = gdal.Open("D:/TESTE/ACRE_2000_con.tif")
[xinic,resx,rotax,yinic,rotay,resy] = raster.GetGeoTransform()

print("Xinic:{0:0.4f} \tResX:{1:0.6f} \nYinic:{2:0.4f} \tResY:{3:0.6f}".format(xinic,resx,yinic,resy))

mapbioma = raster.ReadAsArray().astype(np.int)

floresta = np.where(mapbioma == 255,1,0)
 
ny=74
nx=126

tcg = 200


np_floresta = np.zeros((ny+1,nx+1), dtype=float)
np_floresta.fill(np.nan)

# Loop de calculo de porcentagem por grid
for r in range(0,ny+1,1): # Numero de colunas obtidos da nx da grade
    for c in range(0,nx+1,1): # Numero de linhas obtidos da ny da grade
        if r == 0 and c == 0:
            [kri,krf,kci,kcf] = (0,tcg-1,0,tcg-1)
            np_floresta[r,c] = floresta[0:tcg-1,0:tcg-1].sum()/(np.count_nonzero(mapbioma[0:tcg-1,0:tcg-1]))
        elif r == 0 and c != 0:
            kci = (tcg*c)
            kcf = (tcg*(c+1))-1
            np_floresta[r,c] = floresta[0:tcg-1,kci:kcf].sum()/(np.count_nonzero(mapbioma[0:tcg-1,kci:kcf]))
        elif r != 0 and c == 0:
            kri = (tcg*r)
            krf = (tcg*(r+1))-1
            np_floresta[r,c] = floresta[kri:krf,0:tcg-1].sum()/(np.count_nonzero(mapbioma[kri:krf,0:tcg-1]))
        elif r != 0 and c != 0:
            kci = (tcg*c)
            kcf = (tcg*(c+1))-1
            kri = (tcg*r)
            krf = (tcg*(r+1))-1
            np_floresta[r,c] = floresta[kri:krf,kci:kcf].sum()/(np.count_nonzero(mapbioma[kri:krf,kci:kcf]))
    
        print("Pixel [{0},{1}] \n Celula [{3}:{4}, {5}:{6}] = \tvalor {2}".format(r,c,np_floresta[r,c],kri,krf,kci,kcf))


plt.imshow(np_floresta)
plt.colorbar()
